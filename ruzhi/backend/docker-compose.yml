version: "3.8"

services:
  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8000:8000"
    environment:
      - OCR_SERVICE_URL=http://ocr-service:8001
      - KNOWLEDGE_GRAPH_SERVICE_URL=http://knowledge-graph-service:8002
      - AI_SERVICE_URL=http://ai-service:8003
      - USER_SERVICE_URL=http://user-service:8004
    depends_on:
      - ocr-service
      - knowledge-graph-service
      - ai-service
      - user-service
    volumes:
      - ./api-gateway:/app

  ocr-service:
    build:
      context: ./ocr-service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ruzhi_ocr
      - MODEL_PATH=/app/models
    volumes:
      - ../models/ocr:/app/models
      - ./ocr-service:/app
    depends_on:
      - postgres

  knowledge-graph-service:
    build:
      context: ./knowledge-graph
    ports:
      - "8002:8002"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
    volumes:
      - ./knowledge-graph:/app
    depends_on:
      - neo4j

  ai-service:
    build:
      context: ./ai-service
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ruzhi_ai
      - MODEL_PATH=/app/models
    volumes:
      - ../models/nlp:/app/models/nlp
      - ../models/generation:/app/models/generation
      - ./ai-service:/app
    depends_on:
      - postgres

  user-service:
    build:
      context: ./user-service
    ports:
      - "8004:8004"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ruzhi_users
      - JWT_SECRET=your_jwt_secret_key_here
    volumes:
      - ./user-service:/app
    depends_on:
      - postgres

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=ruzhi_ocr,ruzhi_ai,ruzhi_users
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-db.sh:/docker-entrypoint-initdb.d/init-multiple-db.sh
    ports:
      - "5432:5432"

  neo4j:
    image: neo4j:5.11
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - ../data/knowledge-base:/import

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
